Template.postItem.rendered = function() {  $(this.find('h3')).slabText();  // fade in to random opacity  var elm = $(this.firstNode);  elm.css('visibility', 'visible').velocity({opacity: 1.0}, 800);};Template.postItem.helpers({  ownPost: function() {    return this.userId === Meteor.userId();  },  domain: function() {    var a = document.createElement('a');    a.href = this.url;    return a.hostname;  },  upvotedClass: function() {    var userId = Meteor.userId();    if (userId && !_.include(this.upvoters, userId)) {      return 'upvotable';    } else {      return 'disabled';    }  },  heartClass: function() {    var userId = Meteor.userId();    if (userId && _.include(this.upvoters, userId)) {      return 'fa-heart';    } else {      return 'fa-heart-o';    }  },  randomColour: function() {    return 'rgba(' + this.bgcolour + ', ' + this.bgopacity + ')';  }});Template.postItem.events({  'click .upvotable': function(e) {    e.preventDefault();    Meteor.call('upvote', this._id);  }});